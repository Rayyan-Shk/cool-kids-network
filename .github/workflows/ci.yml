name: Conditional Lint and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  determine-linter:
    runs-on: ubuntu-latest
    outputs:
      skip_lint: ${{ steps.check-author.outputs.skip_lint }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check commit author
        id: check-author
        run: |
          AUTHOR_NAME=$(git log -1 --pretty=format:'%an')
          AUTHOR_EMAIL=$(git log -1 --pretty=format:'%ae')
          
          # Check if the author is Rayyan-Shk
          if [[ "$AUTHOR_NAME" == "Rayyan-Shk" ]] || [[ "$AUTHOR_EMAIL" == "rayyanshaikhassociates@gmail.com" ]]; then
            echo "Skipping lint for authorized author"
            echo "skip_lint=true" >> $GITHUB_OUTPUT
          else
            echo "Enforcing lint for external contributor"
            echo "skip_lint=false" >> $GITHUB_OUTPUT
          fi

  lint-and-test:
    needs: determine-linter
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json
            backend/package-lock.json

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm ci

      - name: Lint Frontend
        if: ${{ needs.determine-linter.outputs.skip_lint == 'false' }}
        working-directory: ./frontend
        continue-on-error: true
        run: npm run lint

      - name: Lint Backend
        if: ${{ needs.determine-linter.outputs.skip_lint == 'false' }}
        working-directory: ./backend
        continue-on-error: true
        run: npm run lint

      - name: Run Backend Tests
        working-directory: ./backend
        run: npm run test